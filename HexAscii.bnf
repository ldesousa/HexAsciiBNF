#
# BNF syntax for ASCII encoded cartographic hexagonal rasters.
#
# Author: Lu√≠s de Sousa (luis.de.sousa[@]protonmail.ch)
# Date: 02-02-2016 
#
# This specification uses non-formal rules to ease readability:
# . Optional items enclosed in square brackets, e.g. ["+"|"-"]
# . Items existing zero or more times enclosed in curly brackets, e.g {digit}
#
# Verify BNF grammars online:
# http://www.icosaedro.it/bnf_chk/bnf_chk-on-line.html

# -----------------------------------------------
# Basic elements

# A set of one or more blank spaces
blank = " "|"\t" {blank};

# Line break
line_break = "\n"|"\r";

# A digit is any character from 0 to 9:
digit = "0".."9";

# Number is a positive integer:
number = digit {digit};

# Integer numbers have an optional +/- sign followed by one or more digits:
integer = ["+"|"-"] digit {digit};

# Real numbers have an integer part followed either by a fractional part or an exponent part or both:
fraction = "." digit {digit}; 
exponent = ("E"|"e") integer;
real = integer (fraction | exponent| fraction exponent); 


# -----------------------------------------------
# Main structure

# An HexAscii file is composed by three sections:
# . mandatory header
# . optional parameters
# . cell values values
hasc_raster = mandatory_header optional_fields cell_values;

# The mandatory header comprises:
# . number of columns
# . number of rows
# . xx coordinate of the lower left hexagon centroid
# . yy coordinate of the lower left hexagon centroid
# . hexagon side (in map units) 
mandatory_header = ncols nrows xll yll side; 
ncols = "ncols" blank number line_break; 
nrows = "nrows" blank number line_break; 
xll   = "xll"   blank real   line_break; 
yll   = "yll"   blank real   line_break; 
side  = "side"  blank real   line_break; 

# The optional fields:
# . no_data, for cell with unknown value
# . angle, specifying a rotation relative to the xx axis
optional_fields = {no_data} {angle}; 
no_data = "no_data" blank real line_break; 
angle   = "angle"   blank real line_break; 

# The data array, with values separated by blanks or line breaks
cell_values = cell_value {cell_value}; 
cell_value  = real blank|line_break;


